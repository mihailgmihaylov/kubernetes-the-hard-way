apiVersion: v1
kind: Pod
metadata:
  labels:
    k8s-app: kube-proxy
    tier: node
  name: kube-proxy
  namespace: kube-system
spec:
  priorityClassName: system-node-critical
  containers:
  - name: kube-proxy
    command:
    - /bin/sh
    - -c
    - mkfifo /tmp/pipe; (tee -a /var/log/kube-proxy.log < /tmp/pipe & ) ; exec /usr/local/bin/kube-proxy
      --master=https://KUBERNETES_ADDRESS:443
      --proxy-mode=iptables
      --config=/opt/kubernetes/kube_proxy_config.yaml
      --v=2 > /tmp/pipe 2>&1
    env:
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    image: k8s.gcr.io/kube-proxy:v1.15.3
    # livenessProbe:
    #   httpGet:
    #     host: 127.0.0.1
    #     path: /healthz
    #     port: 10256
    #     scheme: HTTP
    #   initialDelaySeconds: 15
    #   timeoutSeconds: 15
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        memory: 100Mi
    securityContext:
      privileged: false
      capabilities:
        add: ["NET_ADMIN", "SYS_MODULE", "SYS_RESOURCE"]
    volumeMounts:
    - mountPath: /opt/kubernetes
      name: config
      readOnly: true
    - mountPath: /var/log/kube-proxy.log
      name: logfile
    - mountPath: /lib/modules
      name: modules
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-hosts
      readOnly: true
    - mountPath: /run/xtables.lock
      name: iptableslock
  hostNetwork: true
  tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  volumes:
  - hostPath:
      path: /opt/kubernetes
    name: config
  - hostPath:
      path: /var/log/kube-proxy.log
      type: FileOrCreate
    name: logfile
  - hostPath:
      path: /lib/modules
    name: modules
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-hosts
  - hostPath:
      path: /run/xtables.lock
      type: FileOrCreate
    name: iptableslock
