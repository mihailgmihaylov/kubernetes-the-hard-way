# Having many containers can hit these two. Docker uses inotify to communicate mounted fs changes.
# They seem safe even at higher values.
fs.inotify.max_user_instances = 8192
fs.inotify.max_user_watches = 524288

# Some apps (e.g. Redis) require higher than the default 128.
net.core.somaxconn = 8192

# Required for basic Docker networking.
net.ipv4.ip_forward = 1

# Reserve these for NodePort assignments. Otherwise they clash with client ports.
# This must match the service NodePort range flag/configuration value of the Kubernetes API server.
net.ipv4.ip_local_reserved_ports = 30000-32767

# Revert small-arp-tables behavior (https://github.com/kubernetes/kubernetes/issues/23395).
# This ensures proper l2 comms between instances. Amazon also recommends it and uses it in Amazon Linux.
net.ipv4.neigh.default.gc_thresh1 = 0

# Don't shrink window size on already established connections. Useful for persistent HTTP connections and the like.
net.ipv4.tcp_slow_start_after_idle = 0

# Prevent Elasticsearch OOM events. Looks safe for everything else.
vm.max_map_count = 262144

# Required by kubelet's '--protect-kernel-defaults' option, which in turn is required by the CIS Benchmark.
vm.overcommit_memory = 1
kernel.panic = 10
kernel.panic_on_oops = 1

# kube-proxy
net.ipv4.conf.all.route_localnet = 1
net.netfilter.nf_conntrack_max = 2097152
net.netfilter.nf_conntrack_tcp_timeout_established = 86400
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 3600

